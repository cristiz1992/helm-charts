{{- if (include "allowInsecureSSL" .) }}
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: selfsigned
spec:
  insecureSkipVerify: true
{{- end }}
{{- range .Values.externals }}
---
{{- if and .externalName .ips (gt (len .ips) 0) -}}
  {{- fail "Error: 'externalName' and 'ips' cannot be set at the same time" }}
{{- end -}}
{{- if and (not .externalName) (or (not .ips) (eq (len .ips) 0)) -}}
  {{- fail "Error: 'externalName' or 'ips' must have a value" }}
{{- end -}}
{{- if .externalName }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .name | quote }}
spec:
  type: ExternalName
  externalName: {{ .externalName | quote }}
{{- end }}
{{- if .ips}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name | quote }}
spec:
  clusterIP: None
  clusterIPs:
  - None
  ports:
  - port: {{ .ingressRoute.port }}
    protocol: TCP
    targetPort: {{ .ingressRoute.port }}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Endpoints
metadata:
  name: {{ .name | quote }}
subsets:
- addresses:
  {{- range .ips }}
  - ip: {{ . }}
  {{- end }}
  ports:
  - port: {{ .ingressRoute.port }}
    protocol: TCP
{{- end }}
{{- if and .ingressRoute .ingressRoute.enable }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ .name -}}-proxy
spec:
  entryPoints:
    {{- toYaml .ingressRoute.entryPoints | nindent 2 }}
  routes:
  - kind: Rule
    match: Host(`{{- .ingressRoute.host -}}`)
    services:
      - name: {{ .name | quote }}
        port: {{ .ingressRoute.port }}
        scheme: {{ .ingressRoute.scheme | quote }}
        {{- if .ingressRoute.allowInsecureSSL }}
        serversTransport: selfsigned
        {{- end }}
        {{- if .ingressRoute.useStickySession }}
        sticky:
            cookie:
              name: StickyCookie
        {{- end }}
        {{- if and .ingressRoute.healthCheck .ingressRoute.healthCheck.enable }}
        healthCheck:
          path: {{ .ingressRoute.healthCheck.path | quote }}
          interval: {{ .ingressRoute.healthCheck.interval | quote }}
          timeout: {{ .ingressRoute.healthCheck.timeout | quote }}
        {{- end }}
  {{- if .ingressRoute.ssl }}
  {{- if .ingressRoute.sslOption }}
  tls:
    options:
      name: {{ .ingressRoute.sslOption.name | quote }}
      namespace: {{ .ingressRoute.sslOption.namespace | quote }}
  {{- else }}
  tls: {}
  {{- end }}
  {{- end -}}
{{- end -}}
{{- end -}}